#!/usr/bin/env snabb

local basic_apps = require("apps.basic.basic_apps")
local rate_limiter = require("apps.rate_limiter.rate_limiter")
local packet_filter = require("apps.packet_filter.packet_filter")
local Intel82599 = require("apps.intel.intel_app").Intel82599
local csv = require("apps.csv")
local pcap = require("apps.pcap.pcap")

local c = config.new()

-- Packet filter rules, see below.
local v6_rules = [[
{
   {
      ethertype = "ipv6",
      protocol = "icmp",
      source_cidr = "3ffe:501:0:1001::2/128", -- single IP, match 128bit
      dest_cidr =
         "3ffe:507:0:1:200:86ff:fe05:8000/116", -- match first 64bit and mask next 52 bit
   },
   {
      ethertype = "ipv6",
      protocol = "udp",
      source_cidr = "3ffe:507:0:1:200:86ff::/28", -- mask first 28 bit
      dest_cidr = "3ffe:501:4819::/64",           -- match first 64bit
      source_port_min = 2397, -- port range, in v6.pcap there are values on
      source_port_max = 2399, -- both borders and in the middle
      dest_port_min = 53,     -- single port match
      dest_port_max = 53,
   }
}
]]

config.app(c, "pcap", pcap.PcapReader, "apps/packet_filter/samples/v6.pcap")
config.app(c, "repeat", basic_apps.Repeater)
config.app(c, "limit", rate_limiter.RateLimiter, [[ {rate = 1e8, bucket_capacity = 1e9} ]])
config.app(c, "nic1", Intel82599, [[{pciaddr = "0000:05:00.1"}]])
config.app(c, "nic2", Intel82599, [[{pciaddr = "0000:8a:00.1"}]])
config.app(c, "filter", packet_filter.PacketFilter, v6_rules)
config.app(c, "tee", basic_apps.Tee)
config.app(c, "sink1", basic_apps.Sink)
config.app(c, "sink2", basic_apps.Sink)
config.app(c, "csv", csv.CSV, "/tmp/")

config.link(c, "pcap.output -> repeat.input")
config.link(c, "repeat.output -> nic1.rx")

config.link(c, "nic2.tx -> tee.in")
config.link(c, "tee.out1 -> limit.input")
config.link(c, "limit.output -> sink1.in")
config.link(c, "tee.out2 -> filter.input")
config.link(c, "filter.output -> sink2.in")

engine.configure(c)

engine.app_table.limit:init_timer()

while true do
   engine.main({duration = 1})
end

